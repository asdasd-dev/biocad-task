{"version":3,"sources":["components/FilterDevices.js","components/Unit.js","components/DeviceInfo.js","components/ReportFilters.js","components/Report.js","App.js","reportWebVitals.js","index.js"],"names":["FilterDevices","props","useState","filterText","filterTextChange","className","onSubmit","e","preventDefault","type","value","onChange","target","Unit","src","DeviceInfo","listItems","description","map","name","link","href","ReportFilters","selectedDays","setSelectedDays","selectedKind","setSelectedKind","checked","onClick","Report","rows","data","rowData","date","time","solutions","solution","slope","offset","user","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a979ac16.chunk.js","sourcesContent":["import { render } from '@testing-library/react';\r\nimport React, {useState} from 'react';\r\nimport '../styles/FilterDevices.scss'\r\n\r\nexport default function FilterDevices(props) {\r\n\r\n    let [filterText, filterTextChange] = useState('');\r\n\r\n    return (\r\n        <div className=\"FilterDevices\">\r\n            <p>Enter inventory number, guid or bims id</p>\r\n            <form onSubmit={e => {\r\n                // submitting data\r\n                e.preventDefault();\r\n            }}>\r\n                <input type=\"text\" value={filterText} onChange={e => filterTextChange(e.target.value)} />\r\n                <input type=\"submit\" value=\"Search\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport '../styles/Unit.scss'\r\n\r\nexport default function Unit(props) {\r\n    return (\r\n        <div className=\"Unit\">\r\n            <img src=\"scale.png\" />\r\n            <p> Аналитические весы OHAUS Adventurer АХ324\r\n            (B715976163)\r\n            </p>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport '../styles/DeviceInfo.scss';\r\n\r\nexport default function DeviceInfo(props) {\r\n    const listItems = props.description.map(e => {\r\n        return (\r\n            <li key={e.name}>\r\n                <span className='info-name'>{e.name}: </span>\r\n                {!e.link ? <span className='info-description'>{e.value}</span> : <a className='info-description' href={e.link}>{e.value}</a>}\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"DeviceInfo\">\r\n            {listItems}\r\n        </ul>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport '../styles/ReportFilters.scss';\r\n\r\nexport default function ReportFilters(props) {\r\n\r\n    const [selectedDays, setSelectedDays] = useState(\"30\");\r\n    const [selectedKind, setSelectedKind] = useState(\"1\");\r\n\r\n    return (\r\n        <form className=\"ReportFilters\">\r\n            <select value={selectedDays} onChange={e => setSelectedDays(e.target.value)}>\r\n                <option value=\"1\">1 day</option>\r\n                <option value=\"30\">1 month</option>\r\n                <option value=\"365\">1 year</option>\r\n            </select>\r\n            <div onChange={e => setSelectedKind(e.target.value)}>\r\n                <p><input type=\"radio\" name=\"reportKind\" value=\"1\" checked={\"1\" == selectedKind}/><label>Calibration</label></p>\r\n                <p><input type=\"radio\" name=\"reportKind\" value=\"2\" checked={\"2\" == selectedKind}/><label>Measuring</label></p>\r\n                <p><input type=\"radio\" name=\"reportKind\" value=\"3\" checked={\"3\" == selectedKind}/><label>Using</label></p>\r\n            </div>\r\n            <button type=\"submit\" onClick={e => {\r\n                // submitting data\r\n                e.preventDefault();\r\n            }}>Generate report</button>\r\n        </form>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport '../styles/Report.scss'\r\n\r\nexport default function Report(props) {\r\n    \r\n    let rows = props.data.map(rowData => {\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    {rowData.date}<br/>{rowData.time}\r\n                </td>\r\n                <td>\r\n                    {rowData.solutions.map(solution => {\r\n                        return <>{solution}<br/></>;\r\n                    })}\r\n                </td>\r\n                <td>\r\n                <span>{rowData.slope}</span> {(rowData.slope > 95 && rowData.slope < 105) ? <img src='success.png'/> : <img src='error.png'/>}\r\n                </td>\r\n                <td>\r\n                    <span>{rowData.offset}</span> {(rowData.offset > -20 && rowData.offset < 20) ? <img src='success.png'/> : <img src='error.png'/>}\r\n                </td>\r\n                <td>\r\n                    {rowData.user}\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"Report\">\r\n            <div className=\"container\">\r\n                <p>Calibration report</p>\r\n                <table>\r\n                    <tr>\r\n                        <th>Data</th>\r\n                        <th>Used buffer solutions</th>\r\n                        <th>Slope, %<br/>Norm 95-105</th>\r\n                        <th>Offset, mV<br/>Norm ±(0-20)</th>\r\n                        <th>User</th>\r\n                    </tr>\r\n                    {rows}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './App.scss';\nimport React from 'react';\nimport FilterDevices from './components/FilterDevices';\nimport Unit from './components/Unit';\nimport DeviceInfo from './components/DeviceInfo';\nimport ReportFilters from './components/ReportFilters';\nimport Report from './components/Report'\n\n\nfunction App() {\n  const deviceDescription = [\n    {name: 'Тип оборудования', value: 'Весы'},\n    {name: 'Статуся', value: 'Готов к работе'},\n    {name: 'Изготовитель', value: 'Ohaus'},\n    {name: 'Модель', value: 'AX-123'},\n    {name: 'Ответственное подразделение (ремонт)', value: 'Группа обслуживания лабораторного оборудования'},\n    {name: 'Эксплуатирующее подразделение', value: 'Химико-аналитическая лаборатория 2.0'},\n    {name: 'МОЛ', value: 'Иванов Иван Иванович'},\n    {name: 'Территория', value: 'г. Санкт-Петербург (Нойдорф)'},\n    {name: 'Серийный номер', value: 'B715976163'},\n    {name: 'GUID', value: '508b2a71-662e-4983-ae0c-3cb0c1cd21c5', link: '#guid'},\n    {name: 'Bims ID', value: '49db8db1-585f-4b9e-bbf0-8a59698edc8b', link: '#bimsid'},\n    {name: 'Tam', value: 'А-001234', link: '#tam'},\n  ];\n  \n  const reportData = [\n    {\n      date: '04.10.19',\n      time: '10:23', \n      solutions: ['В1: № 2000460789536: pH 1.09', 'В2: № 2000460789536: pH 2.00', 'В3: № 2000460789536: pH 4.01', 'В4: № 2000460789536: pH 7.00', 'В5: № 2000460789536: pH 9.21'],\n      slope: '98.7',\n      offset: '-0.3',\n      user: 'Иванов Генадий Петрович',\n    },\n    {\n      date: '04.10.19',\n      time: '10:23', \n      solutions: ['В1: № 2000460789536: pH 1.09', 'В2: № 2000460789536: pH 2.00', 'В3: № 2000460789536: pH 4.01', 'В4: № 2000460789536: pH 7.00', 'В5: № 2000460789536: pH 9.21'],\n      slope: '98.7',\n      offset: '-0.3',\n      user: 'Иванов Генадий Петрович',\n    },\n    {\n      date: '04.10.19',\n      time: '10:23', \n      solutions: ['В1: № 2000460789536: pH 1.09', 'В2: № 2000460789536: pH 2.00', 'В3: № 2000460789536: pH 4.01', 'В4: № 2000460789536: pH 7.00', 'В5: № 2000460789536: pH 9.21'],\n      slope: '98.7',\n      offset: '-0.3',\n      user: 'Иванов Генадий Петрович',\n    },\n    {\n      date: '04.10.19',\n      time: '10:23', \n      solutions: ['В1: № 2000460789536: pH 1.09', 'В2: № 2000460789536: pH 2.00', 'В3: № 2000460789536: pH 4.01', 'В4: № 2000460789536: pH 7.00', 'В5: № 2000460789536: pH 9.21'],\n      slope: '90.1',\n      offset: '-0.3',\n      user: 'Иванов Генадий Петрович',\n    },\n    \n  ]\n\n  return (\n    <div className=\"App\">\n      <div className=\"row-flex\">\n        <div className=\"col-flex\">\n          <FilterDevices/>\n          <Unit src='./images/scale.png'/>\n          <ReportFilters/>\n        </div>\n        <DeviceInfo description={deviceDescription} />\n      </div>\n      <Report data={reportData}/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}